require('dotenv').config();
const nodemailer = require('nodemailer');

console.log('üî¨ DIAGNOSTIC AVANC√â GMAIL\n');

const advancedGmailTest = async () => {
  // Test 1: V√©rification des param√®tres de s√©curit√© Gmail
  console.log('üîê Test 1: Param√®tres de s√©curit√©');
  console.log('Allez v√©rifier ces param√®tres sur votre compte Gmail:');
  console.log('https://myaccount.google.com/security');
  console.log('- Validation en 2 √©tapes: DOIT √™tre activ√©e');
  console.log('- Acc√®s moins s√©curis√©: DOIT √™tre d√©sactiv√©');
  console.log('- Mots de passe des applications: DOIT avoir "Zengest"');
  
  // Test 2: Diff√©rentes configurations Gmail
  const configurations = [
    {
      name: 'Gmail avec service',
      config: {
        service: 'gmail',
        auth: {
          user: process.env.EMAIL_USER,
          pass: process.env.EMAIL_PASSWORD
        }
      }
    },
    {
      name: 'Gmail SMTP explicite port 587',
      config: {
        host: 'smtp.gmail.com',
        port: 587,
        secure: false,
        auth: {
          user: process.env.EMAIL_USER,
          pass: process.env.EMAIL_PASSWORD
        },
        tls: {
          rejectUnauthorized: false
        }
      }
    },
    {
      name: 'Gmail SMTP explicite port 465',
      config: {
        host: 'smtp.gmail.com',
        port: 465,
        secure: true,
        auth: {
          user: process.env.EMAIL_USER,
          pass: process.env.EMAIL_PASSWORD
        }
      }
    }
  ];
  
  console.log('\nüìß Test de diff√©rentes configurations Gmail...\n');
  
  for (const test of configurations) {
    try {
      console.log(`üîÑ Test: ${test.name}`);
      const transporter = nodemailer.createTransport(test.config);
      
      await transporter.verify();
      console.log(`‚úÖ ${test.name} fonctionne !`);
      
      // Si √ßa marche, essayer d'envoyer un email
      const result = await transporter.sendMail({
        from: process.env.EMAIL_USER,
        to: process.env.EMAIL_USER,
        subject: `Test ${test.name} r√©ussi`,
        text: `Configuration ${test.name} fonctionnelle !`
      });
      
      console.log(`üìß Email envoy√© avec ${test.name}:`, result.messageId);
      console.log('üéâ SOLUTION TROUV√âE !');
      return; // Arr√™ter si √ßa marche
      
    } catch (error) {
      console.log(`‚ùå ${test.name} √©chec:`, error.message.split('\n')[0]);
    }
  }
  
  console.log('\nüö® TOUTES LES CONFIGURATIONS GMAIL √âCHOUENT');
  console.log('\nüîç Causes possibles:');
  console.log('1. Compte Gmail bloqu√©/suspendu temporairement');
  console.log('2. Trop de tentatives de connexion √©chou√©es');
  console.log('3. Restrictions g√©ographiques/r√©seau');
  console.log('4. Param√®tres de s√©curit√© Gmail trop stricts');
  
  console.log('\nüí° Solutions √† essayer:');
  console.log('1. Attendre 30 minutes puis r√©essayer');
  console.log('2. Essayer depuis un autre r√©seau/connexion');
  console.log('3. V√©rifier l\'activit√© suspecte sur votre compte Gmail');
  console.log('4. Utiliser un autre service email temporairement');
  
  console.log('\nüåê V√©rifications √† faire sur Gmail:');
  console.log('https://security.google.com/settings/security/activity');
  console.log('https://myaccount.google.com/security/2fa');
  console.log('https://myaccount.google.com/device-activity');
};

advancedGmailTest();